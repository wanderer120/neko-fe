{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wanderer120/Documents/projects/neko/neko-fe/src/App.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { _ABI, _CONTRACT_ADDRESS } from './config';\nimport Button from 'react-bootstrap/Button';\nimport MainPage from './Components/MainPage';\nvar app;\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    if (!ethEnabled()) {\n      alert(\"Please install an Ethereum-compatible browser or extension like MetaMask to use this dApp!\");\n    } else {\n      let userDetailObj = {};\n      const accounts = await window.web3.eth.getAccounts().then(accounts => {\n        if (accounts.length === 0) {\n          console.log('MetaMask is locked');\n          this.setState({\n            isLogin: false\n          });\n        } else {\n          this.setState({\n            isLogin: true\n          });\n          userDetailObj.account = accounts[0];\n          window.web3.eth.getBalance(accounts[0]).then(value => {\n            userDetailObj.balance = window.web3.utils.fromWei(value);\n            this.setState({\n              userDetail: userDetailObj\n            });\n          });\n          userDetailObj.contract = new window.web3.eth.Contract(_ABI, _CONTRACT_ADDRESS);\n          userDetailObj.contract.methods.isUserExists(userDetailObj.account).call().then(result => {\n            userDetailObj.userExist = result;\n            this.setState({\n              userExist: result\n            });\n          });\n          userDetailObj.contract.methods.users(userDetailObj.account).call().then(result => {\n            userDetailObj.itemCount = result.itemCount;\n            this.setState({\n              itemCount: result.itemCount\n            });\n          });\n          userDetailObj.contract.methods.lastItemId().call().then(result => {\n            this.setState({\n              universeItemCount: result\n            });\n          });\n          userDetailObj.contract.methods.getAllItemsByUser(userDetailObj.account).call().then(result => {\n            let itemObj = {};\n            itemObj.idArr = [];\n            itemObj.powerArr = [];\n\n            for (let i = 0; i < result[Object.keys(result)[0]].length; i++) {\n              itemObj.idArr[i] = result[Object.keys(result)[0]][i];\n              itemObj.powerArr[i] = result[Object.keys(result)[1]][i];\n            }\n\n            userDetailObj.itemIdArr = itemObj.idArr;\n            userDetailObj.itemPowerArr = itemObj.powerArr;\n            this.setState({\n              userDetail: userDetailObj\n            });\n          });\n          userDetailObj.contract.methods.lastItemId().call().then(result => {\n            if (result > 8) {\n              var winnerObj = {};\n              winnerObj.winnerArr = ['1', '2', '3', '4', '5', '6', '7', '8'];\n              winnerObj.winnerAmountArr = [];\n\n              for (let i = 0; i < 8; i++) {\n                userDetailObj.contract.methods.allItems(i).call().then(result => {\n                  for (let i = 0; i < result[Object.keys(result)[0]].length; i++) {\n                    winnerObj.winnerArr[i] = result[Object.keys(result)[3]][i];\n                    winnerObj.winnerAmountArr[i] = result[Object.keys(result)[2]][i];\n                  }\n                });\n              }\n\n              userDetailObj.winnerArr = winnerObj.winnerArr;\n              userDetailObj.winnerAmountArr = winnerObj.winnerAmountArr;\n              console.log(userDetailObj.winnerArr[0]);\n              this.setState({\n                userDetail: userDetailObj\n              });\n            }\n          });\n        }\n      }, () => {\n        console.log(\"fail callback\");\n      });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    app = this;\n    this.state = {\n      isLogin: false,\n      userDetail: {\n        account: -1,\n        balance: -1,\n        contract: {}\n      },\n      userExist: false,\n      itemCount: -1,\n      universeItemCount: -1\n    };\n    this.LoginToMetamask = this.LoginToMetamask.bind(this);\n    window.ethereum.on('accountsChanged', function (accounts) {\n      window.location.reload();\n      /*\n      if (!ethEnabled()) {\n        alert(\"Please install an Ethereum-compatible browser or extension like MetaMask to use this dApp!\");\n      }\n      else{\n        let userDetailObj = {};\n        window.web3.eth.getAccounts().then((accounts)=>{\n          if (accounts.length === 0) {\n            console.log('MetaMask is locked')\n            app.setState({isLogin:false})\n          }\n          else {\n            app.setState({isLogin:true})\n            userDetailObj.account = accounts[0]\n            window.web3.eth.getBalance(accounts[0]).then((value)=>{\n              userDetailObj.balance = window.web3.utils.fromWei(value)\n              app.setState({userDetail:userDetailObj})\n            });\n            userDetailObj.contract = new window.web3.eth.Contract(_ABI, _CONTRACT_ADDRESS)\n            userDetailObj.contract.methods.isUserExists(userDetailObj.account).call().then((result)=>{\n              userDetailObj.userExist = result\n              app.setState({userExist:result})\n            });\n            userDetailObj.contract.methods.users(userDetailObj.account).call().then((result)=>{\n              userDetailObj.itemCount = result.itemCount;\n              app.setState({itemCount:result.itemCount})\n            });\n            userDetailObj.contract.methods.lastItemId().call().then((result)=>{\n              app.setState({universeItemCount:(result)})\n            });\n            userDetailObj.contract.methods.getAllItemsByUser(userDetailObj.account).call().then((result)=>{\n              let itemObj = {};\n              for(let i=0;i<result[Object.keys(result)[0]].length;i++){\n                itemObj.idArr = result[Object.keys(result)[0]][i];\n                itemObj.powerArr = result[Object.keys(result)[1]][i];\n              }\n              userDetailObj.itemIdArr = itemObj.idArr;\n              userDetailObj.itemPowerArr = itemObj.powerArr;\n              console.log(itemObj.idArr);\n              app.setState({userDetail:userDetailObj});\n            });\n          }\n        },()=>{\n          console.log(\"fail callback\");\n        })\n      }*/\n    });\n  }\n\n  render() {\n    if (this.state.isLogin) {\n      return /*#__PURE__*/_jsxDEV(MainPage, {\n        userDetail: this.state.userDetail,\n        universeItemCount: this.state.universeItemCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.LoginToMetamask,\n          children: \"Connect to Metamask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  LoginToMetamask() {\n    this.loadBlockchainData();\n  }\n\n}\n\nconst ethEnabled = () => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    window.ethereum.enable();\n    return true;\n  }\n\n  return false;\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/wanderer120/Documents/projects/neko/neko-fe/src/App.js"],"names":["React","Component","Web3","_ABI","_CONTRACT_ADDRESS","Button","MainPage","app","App","componentWillMount","loadBlockchainData","ethEnabled","alert","userDetailObj","accounts","window","web3","eth","getAccounts","then","length","console","log","setState","isLogin","account","getBalance","value","balance","utils","fromWei","userDetail","contract","Contract","methods","isUserExists","call","result","userExist","users","itemCount","lastItemId","universeItemCount","getAllItemsByUser","itemObj","idArr","powerArr","i","Object","keys","itemIdArr","itemPowerArr","winnerObj","winnerArr","winnerAmountArr","allItems","constructor","props","state","LoginToMetamask","bind","ethereum","on","location","reload","render","display","justifyContent","enable"],"mappings":"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","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react'\nimport Web3 from 'web3'\nimport './App.css'\n\nimport { _ABI, _CONTRACT_ADDRESS } from './config'\n\nimport Button from 'react-bootstrap/Button'\nimport MainPage from './Components/MainPage'\n\nvar app;\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n  async loadBlockchainData() {\n    if (!ethEnabled()) {\n      alert(\"Please install an Ethereum-compatible browser or extension like MetaMask to use this dApp!\");\n    }\n    else{\n      let userDetailObj = {};\n      const accounts = await window.web3.eth.getAccounts().then((accounts)=>{\n        if (accounts.length === 0) {\n          console.log('MetaMask is locked')\n          this.setState({isLogin:false})\n        }\n        else {\n          this.setState({isLogin:true})\n          userDetailObj.account = accounts[0]\n          window.web3.eth.getBalance(accounts[0]).then((value)=>{\n            userDetailObj.balance = window.web3.utils.fromWei(value)\n            this.setState({userDetail:userDetailObj})\n          });\n          userDetailObj.contract = new window.web3.eth.Contract(_ABI, _CONTRACT_ADDRESS)\n          userDetailObj.contract.methods.isUserExists(userDetailObj.account).call().then((result)=>{\n            userDetailObj.userExist = result\n            this.setState({userExist:result})\n          });\n          userDetailObj.contract.methods.users(userDetailObj.account).call().then((result)=>{\n            userDetailObj.itemCount = result.itemCount;\n            this.setState({itemCount:result.itemCount})\n          });\n          userDetailObj.contract.methods.lastItemId().call().then((result)=>{\n            this.setState({universeItemCount:(result)})\n          });\n          userDetailObj.contract.methods.getAllItemsByUser(userDetailObj.account).call().then((result)=>{\n            let itemObj = {};\n            itemObj.idArr = [];\n            itemObj.powerArr = [];\n            for(let i=0;i<result[Object.keys(result)[0]].length;i++){\n              itemObj.idArr[i] = result[Object.keys(result)[0]][i];\n              itemObj.powerArr[i] = result[Object.keys(result)[1]][i];\n            }\n            userDetailObj.itemIdArr = itemObj.idArr;\n            userDetailObj.itemPowerArr = itemObj.powerArr;\n            this.setState({userDetail:userDetailObj});\n          });\n          userDetailObj.contract.methods.lastItemId().call().then((result)=>{\n            if(result>8){\n              var winnerObj = {};\n              winnerObj.winnerArr = ['1','2','3','4','5','6','7','8'];\n              winnerObj.winnerAmountArr = [];\n              for(let i=0;i<8;i++){\n                userDetailObj.contract.methods.allItems(i).call().then((result)=>{\n                  for(let i=0;i<result[Object.keys(result)[0]].length;i++){\n                    winnerObj.winnerArr[i] = result[Object.keys(result)[3]][i];\n                    winnerObj.winnerAmountArr[i] = result[Object.keys(result)[2]][i];\n                  }\n                });\n              }\n              userDetailObj.winnerArr = winnerObj.winnerArr;\n              userDetailObj.winnerAmountArr = winnerObj.winnerAmountArr;\n              console.log(userDetailObj.winnerArr[0]);\n              this.setState({userDetail:userDetailObj});\n            }\n          });\n        }\n      },()=>{\n        console.log(\"fail callback\");\n      })\n    }\n  }\n  constructor(props) {\n    super(props)\n    app = this;\n    this.state = {\n      isLogin: false,\n      userDetail: {account:-1,balance:-1,contract:{}},\n      userExist: false,\n      itemCount:-1,\n      universeItemCount:-1\n    }\n    this.LoginToMetamask = this.LoginToMetamask.bind(this);\n    window.ethereum.on('accountsChanged', function (accounts) {\n      window.location.reload();\n      /*\n      if (!ethEnabled()) {\n        alert(\"Please install an Ethereum-compatible browser or extension like MetaMask to use this dApp!\");\n      }\n      else{\n        let userDetailObj = {};\n        window.web3.eth.getAccounts().then((accounts)=>{\n          if (accounts.length === 0) {\n            console.log('MetaMask is locked')\n            app.setState({isLogin:false})\n          }\n          else {\n            app.setState({isLogin:true})\n            userDetailObj.account = accounts[0]\n            window.web3.eth.getBalance(accounts[0]).then((value)=>{\n              userDetailObj.balance = window.web3.utils.fromWei(value)\n              app.setState({userDetail:userDetailObj})\n            });\n            userDetailObj.contract = new window.web3.eth.Contract(_ABI, _CONTRACT_ADDRESS)\n            userDetailObj.contract.methods.isUserExists(userDetailObj.account).call().then((result)=>{\n              userDetailObj.userExist = result\n              app.setState({userExist:result})\n            });\n            userDetailObj.contract.methods.users(userDetailObj.account).call().then((result)=>{\n              userDetailObj.itemCount = result.itemCount;\n              app.setState({itemCount:result.itemCount})\n            });\n            userDetailObj.contract.methods.lastItemId().call().then((result)=>{\n              app.setState({universeItemCount:(result)})\n            });\n            userDetailObj.contract.methods.getAllItemsByUser(userDetailObj.account).call().then((result)=>{\n              let itemObj = {};\n              for(let i=0;i<result[Object.keys(result)[0]].length;i++){\n                itemObj.idArr = result[Object.keys(result)[0]][i];\n                itemObj.powerArr = result[Object.keys(result)[1]][i];\n              }\n              userDetailObj.itemIdArr = itemObj.idArr;\n              userDetailObj.itemPowerArr = itemObj.powerArr;\n              console.log(itemObj.idArr);\n              app.setState({userDetail:userDetailObj});\n            });\n          }\n        },()=>{\n          console.log(\"fail callback\");\n        })\n      }*/\n    });\n  }\n  render() {\n    if(this.state.isLogin){\n      return (\n        <MainPage userDetail={this.state.userDetail} universeItemCount={this.state.universeItemCount}/>\n      );\n    }\n    else {\n      return (\n        <div className=\"container\" style={{display: 'flex', justifyContent: 'center'}}>\n          <Button variant=\"primary\" onClick={this.LoginToMetamask}>Connect to Metamask</Button>\n        </div>\n      );\n    }\n  }\n  LoginToMetamask(){\n    this.loadBlockchainData()\n  }\n}\nconst ethEnabled = () => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    window.ethereum.enable();\n    return true;\n  }\n  return false;\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
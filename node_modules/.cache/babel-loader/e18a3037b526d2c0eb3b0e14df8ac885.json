{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wanderer120/Documents/projects/neko/neko-fe/src/Components/Inventory.js\";\nimport React, { Component } from 'react';\nimport ScrollMenu from 'react-horizontal-scrolling-menu'; // One item component\n// selected prop will be passed\n\nconst MenuItem = ({\n  text,\n  selected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `menu-item ${selected ? 'active' : ''}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}; // All items component\n// Important! add unique key\n\n\n_c = MenuItem;\nexport const Menu = (list, selected) => list.map(el => {\n  const {\n    name\n  } = el;\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    text: name,\n    selected: selected\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Menu;\n\nconst Arrow = ({\n  text,\n  className\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Arrow;\nconst ArrowLeft = Arrow({\n  text: '<',\n  className: 'arrow-prev'\n});\nconst ArrowRight = Arrow({\n  text: '>',\n  className: 'arrow-next'\n});\nconst selected = 'item1';\nexport default class Inventory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected\n    };\n    this.menuItems = Menu(list, selected);\n  }\n\n  componentWillMount() {//console.log(this.props);\n  }\n\n  loadItems() {}\n\n  render() {\n    console.log(this.props.itemIds);\n    const {\n      selected\n    } = this.state;\n    this.menuItems = Menu(this.props.itemIds, selected); // Create menu from items\n\n    const menu = this.menuItems;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Inventory:\", this.props.itemIds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ScrollMenu, {\n        data: menu,\n        arrowLeft: ArrowLeft,\n        arrowRight: ArrowRight,\n        selected: selected,\n        onSelect: this.onSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n} // list of items\n\nvar list = [{\n  name: 'item1'\n}, {\n  name: 'item2'\n}, {\n  name: 'item3'\n}, {\n  name: 'item4'\n}, {\n  name: 'item5'\n}, {\n  name: 'item6'\n}, {\n  name: 'item7'\n}, {\n  name: 'item8'\n}, {\n  name: 'item9'\n}];\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MenuItem\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"Arrow\");","map":{"version":3,"sources":["/Users/wanderer120/Documents/projects/neko/neko-fe/src/Components/Inventory.js"],"names":["React","Component","ScrollMenu","MenuItem","text","selected","Menu","list","map","el","name","Arrow","className","ArrowLeft","ArrowRight","Inventory","constructor","props","state","menuItems","componentWillMount","loadItems","render","console","log","itemIds","menu","onSelect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\n\n\n// One item component\n// selected prop will be passed\nconst MenuItem = ({text, selected}) => {\n  return <div\n    className={`menu-item ${selected ? 'active' : ''}`}\n    >{text}</div>;\n};\n\n// All items component\n// Important! add unique key\nexport const Menu = (list, selected) =>\n  list.map(el => {\n    const {name} = el;\n\n    return <MenuItem text={name} key={name} selected={selected} />;\n  });\n\n\nconst Arrow = ({ text, className }) => {\n  return (\n    <div\n      className={className}\n    >{text}</div>\n  );\n};\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\n\nconst selected = 'item1';\n\nexport default class Inventory extends Component {\n  constructor(props) {\n    super(props);\n    this.menuItems = Menu(list, selected);\n  }\n  componentWillMount(){\n    //console.log(this.props);\n  }\n  state = {\n    selected\n  };\n  loadItems(){\n\n  }\n  render(){\n    console.log(this.props.itemIds);\n    const { selected } = this.state;\n    this.menuItems = Menu(this.props.itemIds, selected);\n    // Create menu from items\n    const menu = this.menuItems;\n    return (\n      <div>\n        <span>Inventory:{this.props.itemIds}</span>\n        <ScrollMenu\n            data={menu}\n            arrowLeft={ArrowLeft}\n            arrowRight={ArrowRight}\n            selected={selected}\n            onSelect={this.onSelect}\n          />\n      </div>\n    );\n  }\n}\n// list of items\nvar list = [\n  { name: 'item1' },\n  { name: 'item2' },\n  { name: 'item3' },\n  { name: 'item4' },\n  { name: 'item5' },\n  { name: 'item6' },\n  { name: 'item7' },\n  { name: 'item8' },\n  { name: 'item9' }\n];\n"]},"metadata":{},"sourceType":"module"}
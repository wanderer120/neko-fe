{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wanderer120/Documents/projects/neko/findings/nekotest/client/src/Components/BuyComponent.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nclass BuyComponent extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      refAddress: '-1'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.BuyItem = this.BuyItem.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Referrer ETH wallet address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"refAddress\",\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 50\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Buy 1 item:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.BuyItem,\n        children: \"0.05 ETH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      refAddress: e.target.value\n    });\n  }\n\n  BuyItem() {\n    var obj = {\n      from: window.web3.eth.accounts[0],\n      gas: 8000000,\n      gasPrice: 8000000,\n      gasLimit: 8000000,\n      value: 0\n    };\n    obj.value = _value;\n    this.props.contract.registrationExt(refAdd, obj, function (error, txHash) {\n      if (error) {\n        console.log(error);\n        that.showLoader(false);\n      } // If success, wait for confirmation of transaction,\n      // then clear form value\n      else {\n          that.waitForReceipt(txHash, function (receipt) {\n            that.showLoader(false);\n\n            if (receipt.status) {\n              console.log({\n                receipt\n              });\n              $(\"refAddress\").val(\"\");\n            } else {\n              console.log(\"error\");\n            }\n          });\n        }\n    });\n    console.log(this.props.userDetail.contract);\n    console.log(this.state.refAddress);\n  }\n\n}\n\nexport default BuyComponent;","map":{"version":3,"sources":["/Users/wanderer120/Documents/projects/neko/findings/nekotest/client/src/Components/BuyComponent.js"],"names":["React","Component","Button","BuyComponent","constructor","props","state","refAddress","handleChange","bind","BuyItem","render","e","setState","target","value","obj","from","window","web3","eth","accounts","gas","gasPrice","gasLimit","_value","contract","registrationExt","refAdd","error","txHash","console","log","that","showLoader","waitForReceipt","receipt","status","$","val","userDetail"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,YAAN,SAA2BF,SAA3B,CAAoC;AAClCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACD;;AACDE,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAC2C;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,YAAxB;AAAqC,QAAA,QAAQ,EAAE,KAAKH;AAApD;AAAA;AAAA;AAAA;AAAA,cAD3C,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAE0B,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AACDF,EAAAA,YAAY,CAACI,CAAD,EAAG;AACb,SAAKC,QAAL,CAAc;AAACN,MAAAA,UAAU,EAAEK,CAAC,CAACE,MAAF,CAASC;AAAtB,KAAd;AACD;;AACDL,EAAAA,OAAO,GAAE;AACP,QAAIM,GAAG,GAAG;AACNC,MAAAA,IAAI,EAAEC,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBC,QAAhB,CAAyB,CAAzB,CADA;AAENC,MAAAA,GAAG,EAAE,OAFC;AAGNC,MAAAA,QAAQ,EAAE,OAHJ;AAINC,MAAAA,QAAQ,EAAE,OAJJ;AAKNT,MAAAA,KAAK,EAAE;AALD,KAAV;AAOAC,IAAAA,GAAG,CAACD,KAAJ,GAAYU,MAAZ;AACA,SAAKpB,KAAL,CAAWqB,QAAX,CAAoBC,eAApB,CACEC,MADF,EAEEZ,GAFF,EAGE,UAASa,KAAT,EAAgBC,MAAhB,EAAwB;AACpB,UAAID,KAAJ,EAAW;AACPE,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAI,QAAAA,IAAI,CAACC,UAAL,CAAgB,KAAhB;AACH,OAHD,CAIA;AACA;AALA,WAMK;AACDD,UAAAA,IAAI,CAACE,cAAL,CAAoBL,MAApB,EAA4B,UAASM,OAAT,EAAkB;AAC1CH,YAAAA,IAAI,CAACC,UAAL,CAAgB,KAAhB;;AACA,gBAAIE,OAAO,CAACC,MAAZ,EAAoB;AAChBN,cAAAA,OAAO,CAACC,GAAR,CAAY;AAAEI,gBAAAA;AAAF,eAAZ;AACAE,cAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBC,GAAhB,CAAoB,EAApB;AACH,aAHD,MAGO;AACHR,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;AACJ,WARD;AASH;AACJ,KArBH;AAuBAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWmC,UAAX,CAAsBd,QAAlC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWC,UAAvB;AACD;;AApDiC;;AAuDpC,eAAeJ,YAAf","sourcesContent":["import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button'\n\nclass BuyComponent extends Component{\n  constructor(props){\n    super();\n    this.state = {refAddress: '-1'};\n    this.handleChange = this.handleChange.bind(this);\n    this.BuyItem = this.BuyItem.bind(this);\n  }\n  render(){\n    return(\n      <div>\n        <span>Referrer ETH wallet address:</span><input type=\"text\" name=\"refAddress\" onChange={this.handleChange}/>\n        <span>Buy 1 item:</span><Button onClick={this.BuyItem}>0.05 ETH</Button>\n      </div>\n    );\n  }\n  handleChange(e){\n    this.setState({refAddress: e.target.value})\n  }\n  BuyItem(){\n    var obj = {\n        from: window.web3.eth.accounts[0],\n        gas: 8000000,\n        gasPrice: 8000000,\n        gasLimit: 8000000,\n        value: 0,\n    };\n    obj.value = _value;\n    this.props.contract.registrationExt(\n      refAdd,\n      obj,\n      function(error, txHash) {\n          if (error) {\n              console.log(error);\n              that.showLoader(false);\n          }\n          // If success, wait for confirmation of transaction,\n          // then clear form value\n          else {\n              that.waitForReceipt(txHash, function(receipt) {\n                  that.showLoader(false);\n                  if (receipt.status) {\n                      console.log({ receipt });\n                      $(\"refAddress\").val(\"\");\n                  } else {\n                      console.log(\"error\");\n                  }\n              });\n          }\n      }\n    );\n    console.log(this.props.userDetail.contract);\n    console.log(this.state.refAddress);\n  }\n}\n\nexport default BuyComponent\n"]},"metadata":{},"sourceType":"module"}
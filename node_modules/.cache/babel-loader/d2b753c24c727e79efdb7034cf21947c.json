{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wanderer120/Documents/projects/neko/neko-fe/src/Components/Inventory.js\";\nimport React, { Component } from 'react';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nexport default class Inventory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected\n    };\n\n    this.onSelect = key => {\n      this.setState({\n        selected: key\n      });\n    };\n\n    this.menuItems = Menu(list, selected);\n  }\n\n  componentWillMount() {//console.log(this.props);\n  }\n\n  render() {\n    const itemBox = {\n      height: \"100px\",\n      padding: \"30px\",\n      border: \"1px solid blue\"\n    };\n    console.log(this.props);\n    console.log(this.props.itemIds);\n    const {\n      selected\n    } = this.state; // Create menu from items\n\n    const menu = this.menuItems;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Inventory:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), this.props !== undefined && this.props.itemIds !== undefined ? /*#__PURE__*/_jsxDEV(ScrollMenu, {\n        data: this.props.itemIds.map((id, power) => /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            height: \"100px\"\n          },\n          alt: \"test\",\n          src: \"https://reactjs.org/logo-og.png\"\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)),\n        arrowLeft: ArrowLeft,\n        arrowRight: ArrowRight,\n        selected: selected,\n        onSelect: this.onSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 65\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n} // list of items\n\nconst list = [{\n  name: 'item1'\n}, {\n  name: 'item2'\n}, {\n  name: 'item3'\n}, {\n  name: 'item4'\n}, {\n  name: 'item5'\n}, {\n  name: 'item6'\n}, {\n  name: 'item7'\n}, {\n  name: 'item8'\n}, {\n  name: 'item9'\n}]; // One item component\n// selected prop will be passed\n\nconst MenuItem = ({\n  text,\n  selected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `menu-item ${selected ? 'active' : ''}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}; // All items component\n// Important! add unique key\n\n\n_c = MenuItem;\nexport const Menu = (list, selected) => list.map(el => {\n  const {\n    name\n  } = el;\n  return /*#__PURE__*/_jsxDEV(MenuItem, {\n    text: name,\n    selected: selected\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Menu;\n\nconst Arrow = ({\n  text,\n  className\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Arrow;\nconst ArrowLeft = Arrow({\n  text: '<',\n  className: 'arrow-prev'\n});\nconst ArrowRight = Arrow({\n  text: '>',\n  className: 'arrow-next'\n});\nconst selected = 'item1';\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MenuItem\");\n$RefreshReg$(_c2, \"Menu\");\n$RefreshReg$(_c3, \"Arrow\");","map":{"version":3,"sources":["/Users/wanderer120/Documents/projects/neko/neko-fe/src/Components/Inventory.js"],"names":["React","Component","ScrollMenu","Inventory","constructor","props","state","selected","onSelect","key","setState","menuItems","Menu","list","componentWillMount","render","itemBox","height","padding","border","console","log","itemIds","menu","undefined","map","id","power","ArrowLeft","ArrowRight","name","MenuItem","text","el","Arrow","className"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\n\nexport default class Inventory extends Component {\n  constructor(props) {\n    super(props);\n    this.menuItems = Menu(list, selected);\n  }\n  state = {\n    selected\n  };\n\n  onSelect = key => {\n    this.setState({ selected: key });\n  }\n\n  componentWillMount(){\n    //console.log(this.props);\n  }\n  render(){\n    const itemBox = {\n      height: \"100px\",\n      padding: \"30px\",\n      border: \"1px solid blue\"\n    };\n    console.log(this.props);\n    console.log(this.props.itemIds);\n    const { selected } = this.state;\n    // Create menu from items\n    const menu = this.menuItems;\n    return (\n      <div>\n        <span>Inventory:</span>\n        {this.props!==undefined&&this.props.itemIds!==undefined?<ScrollMenu\n          data={this.props.itemIds.map((id, power) => (\n            <img\n              key={id}\n              style={{ height: \"100px\" }}\n              alt=\"test\"\n              src=\"https://reactjs.org/logo-og.png\"\n            />\n          ))}\n          arrowLeft={ArrowLeft}\n          arrowRight={ArrowRight}\n          selected={selected}\n          onSelect={this.onSelect}\n        />:''}\n      </div>\n    );\n  }\n}\n// list of items\nconst list = [\n  { name: 'item1' },\n  { name: 'item2' },\n  { name: 'item3' },\n  { name: 'item4' },\n  { name: 'item5' },\n  { name: 'item6' },\n  { name: 'item7' },\n  { name: 'item8' },\n  { name: 'item9' }\n];\n\n// One item component\n// selected prop will be passed\nconst MenuItem = ({text, selected}) => {\n  return <div\n    className={`menu-item ${selected ? 'active' : ''}`}\n    >{text}</div>;\n};\n\n// All items component\n// Important! add unique key\nexport const Menu = (list, selected) =>\n  list.map(el => {\n    const {name} = el;\n\n    return <MenuItem text={name} key={name} selected={selected} />;\n  });\n\n\nconst Arrow = ({ text, className }) => {\n  return (\n    <div\n      className={className}\n    >{text}</div>\n  );\n};\n\n\nconst ArrowLeft = Arrow({ text: '<', className: 'arrow-prev' });\nconst ArrowRight = Arrow({ text: '>', className: 'arrow-next' });\n\nconst selected = 'item1';\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wanderer120/Documents/projects/neko/findings/nekotest/client/src/App.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from './config';\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    if (!ethEnabled()) {\n      alert(\"Please install an Ethereum-compatible browser or extension like MetaMask to use this dApp!\");\n    } else {\n      const accounts = await window.web3.eth.getAccounts();\n      this.setState({\n        account: accounts[0]\n      });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '' - 1\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello, World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your account: \", this.state.account]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst ethEnabled = () => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    window.ethereum.enable();\n    return true;\n  }\n\n  return false;\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/wanderer120/Documents/projects/neko/findings/nekotest/client/src/App.js"],"names":["React","Component","Web3","TODO_LIST_ABI","TODO_LIST_ADDRESS","App","componentWillMount","loadBlockchainData","ethEnabled","alert","accounts","window","web3","eth","getAccounts","setState","account","constructor","props","state","render","ethereum","enable"],"mappings":";;AAAA,OAAO,kCAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,UAAjD;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,kBAAL;AACD;;AAED,QAAMA,kBAAN,GAA2B;AACzB,QAAI,CAACC,UAAU,EAAf,EAAmB;AACjBC,MAAAA,KAAK,CAAC,4FAAD,CAAL;AACD,KAFD,MAGI;AACF,YAAMC,QAAQ,GAAG,MAAMC,MAAM,CAACC,IAAP,CAAYC,GAAZ,CAAgBC,WAAhB,EAAvB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEN,QAAQ,CAAC,CAAD;AAAnB,OAAd;AACD;AACF;;AAEDO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEH,MAAAA,OAAO,EAAE,KAAG;AAAd,KAAb;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,qCAAkB,KAAKD,KAAL,CAAWH,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA3ByB;;AA6B5B,MAAMR,UAAU,GAAG,MAAM;AACvB,MAAIG,MAAM,CAACU,QAAX,EAAqB;AACnBV,IAAAA,MAAM,CAACC,IAAP,GAAc,IAAIV,IAAJ,CAASS,MAAM,CAACU,QAAhB,CAAd;AACAV,IAAAA,MAAM,CAACU,QAAP,CAAgBC,MAAhB;AACA,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAPD;;AASA,eAAejB,GAAf","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport React, { Component } from 'react'\nimport Web3 from 'web3'\nimport './App.css'\nimport { TODO_LIST_ABI, TODO_LIST_ADDRESS } from './config'\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData()\n  }\n\n  async loadBlockchainData() {\n    if (!ethEnabled()) {\n      alert(\"Please install an Ethereum-compatible browser or extension like MetaMask to use this dApp!\");\n    }\n    else{\n      const accounts = await window.web3.eth.getAccounts()\n      this.setState({ account: accounts[0] })\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { account: ''-1 }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Hello, World!</h1>\n        <p>Your account: {this.state.account}</p>\n      </div>\n    );\n  }\n}\nconst ethEnabled = () => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    window.ethereum.enable();\n    return true;\n  }\n  return false;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
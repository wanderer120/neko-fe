{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/wanderer120/Documents/projects/neko/neko-fe/src/Components/WinnersPanel.js\";\nimport React, { Component } from 'react';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nexport default class WinnersPanel extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(this.props.winnerArr);\n    return /*#__PURE__*/_jsxDEV(ScrollMenu, {\n      arrowLeft: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"30px\"\n        },\n        children: \" < \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }, this),\n      arrowRight: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"30px\"\n        },\n        children: \" > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this),\n      data: this.props.itemIds !== undefined ? this.props.itemIds.map((id, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: itemBox,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Item#\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Power:\", this.props.itemPowers[index]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst testaArr = [\"aa\", \"bb\", \"cc\", \"vv\", \"ss\", \"dd\", \"ff\", \"ee\"];","map":{"version":3,"sources":["/Users/wanderer120/Documents/projects/neko/neko-fe/src/Components/WinnersPanel.js"],"names":["React","Component","ScrollMenu","WinnersPanel","constructor","props","render","console","log","winnerArr","fontSize","itemIds","undefined","map","id","index","itemBox","itemPowers","testaArr"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAClDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AACDC,EAAAA,MAAM,GAAE;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,SAAvB;AACA,wBACE,QAAC,UAAD;AACE,MAAA,SAAS,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAZ;AAAA,kBAAmC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADb;AAEE,MAAA,UAAU,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAAZ;AAAA,kBAAmC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFd;AAGE,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWM,OAAX,KAAqBC,SAArB,GAA+B,KAAKP,KAAL,CAAWM,OAAX,CAAmBE,GAAnB,CAAuB,CAACC,EAAD,EAAIC,KAAJ,kBAC1D;AAAK,QAAA,KAAK,EAAEC,OAAZ;AAAA,gCACE;AAAA,8BAAYF,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eACwB;AAAA;AAAA;AAAA;AAAA,gBADxB,eAEE;AAAA,+BAAa,KAAKT,KAAL,CAAWY,UAAX,CAAsBF,KAAtB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAA0BD,EAA1B;AAAA;AAAA;AAAA;AAAA,cADmC,CAA/B,GAKH;AARL;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAlBiD;AAoBpD,MAAMI,QAAQ,GAAG,CAAC,IAAD,EAChB,IADgB,EAEf,IAFe,EAGd,IAHc,EAIb,IAJa,EAKZ,IALY,EAMX,IANW,EAOV,IAPU,CAAjB","sourcesContent":["import React, { Component } from 'react'\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\n\nexport default class WinnersPanel extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render(){\n    console.log(this.props.winnerArr);\n    return(\n      <ScrollMenu\n        arrowLeft={<div style={{ fontSize: \"30px\" }}>{\" < \"}</div>}\n        arrowRight={<div style={{ fontSize: \"30px\" }}>{\" > \"}</div>}\n        data={this.props.itemIds!==undefined?this.props.itemIds.map((id,index) => (\n          <div style={itemBox} key={id}>\n            <span>Item#{id}</span><br/>\n            <span>Power:{this.props.itemPowers[index]}</span>\n          </div>\n        )):''}\n      />\n    );\n  }\n}\nconst testaArr = [\"aa\",\n \"bb\",\n  \"cc\",\n   \"vv\",\n    \"ss\",\n     \"dd\",\n      \"ff\",\n       \"ee\"]\n"]},"metadata":{},"sourceType":"module"}